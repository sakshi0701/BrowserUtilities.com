{"version":3,"sources":["components/navbar/Navbar.js","password generator/PasswordGen.js","password generator/Message.js","password generator/Characters.js","QR Code/QRCode.js","URL/api/shrtcode.js","URL/Search.js","URL/Url.js","components/footer/Footer.js","App.js","index.js"],"names":["Navbar","className","PasswordGen","useState","password","setPassword","passwordLength","setPasswordLength","includeUppercase","setIncludeUppercase","includeLowercase","setIncludeLowercase","includeNumbers","setIncludeNumbers","includeSymbols","setIncludeSymbols","createPassword","characterList","characterListLength","length","i","characterIndex","Math","round","random","charAt","copyToClipboard","newTextArea","document","createElement","innerText","body","appendChild","select","execCommand","remove","notify","message","hasError","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","success","onClick","e","htmlFor","defaultValue","onChange","target","value","type","id","name","max","min","checked","newestOnTop","rtl","pauseOnFocusLoss","QRCode","Text","setText","ImageURL","setImageURL","ScanResultFile","setScanResultFile","ScanResultWebCam","setScanResultWebCam","qrRef","useRef","generateQRCode","a","Qrcode","toDataURL","response","console","log","classname","placeholder","href","download","src","alt","variant","current","openImageDialog","ref","delay","style","width","onError","onScan","result","legacyMode","axios","create","baseURL","HTTP_URL_VALIDATOR_REGEX","Search","Link","setLink","Short","setShort","Loading","setLoading","handleSubmit","preventDefault","match","getLink","shrtcode","get","then","data","short_link","catch","label","class","role","Url","Footer","scroll","scrollToTop","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.54997e1a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './nav.css';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <div className=\"nav-title\">BrowserUtilities.com</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useState } from 'react';\r\n\r\nimport { numbers, upperCaseLetters, lowerCaseLetters, specialCharacters, } from './Characters'\r\nimport { COPY_SUCCESS } from './Message'\r\nimport './password.css';\r\n\r\nimport { FaClipboard } from 'react-icons/fa';\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nconst PasswordGen = () => {\r\n\r\n    const [password, setPassword] = useState('')\r\n    const [passwordLength, setPasswordLength] = useState(20)\r\n    const [includeUppercase, setIncludeUppercase] = useState(false)\r\n    const [includeLowercase, setIncludeLowercase] = useState(false)\r\n    const [includeNumbers, setIncludeNumbers] = useState(false)\r\n    const [includeSymbols, setIncludeSymbols] = useState(false)\r\n\r\n    const handleGeneratePassword = (e) => {\r\n        if (\r\n            !includeUppercase &&\r\n            !includeLowercase &&\r\n            !includeNumbers &&\r\n            !includeSymbols\r\n        ) {\r\n            notify('Select atleast one option', true)\r\n        }\r\n        let characterList = ''\r\n\r\n        if (includeLowercase) {\r\n            characterList = characterList + lowerCaseLetters\r\n        }\r\n\r\n        if (includeUppercase) {\r\n            characterList = characterList + upperCaseLetters\r\n        }\r\n\r\n        if (includeNumbers) {\r\n            characterList = characterList + numbers\r\n        }\r\n\r\n        if (includeSymbols) {\r\n            characterList = characterList + specialCharacters\r\n        }\r\n\r\n        setPassword(createPassword(characterList))\r\n    }\r\n\r\n    const createPassword = (characterList) => {\r\n        let password = ''\r\n        const characterListLength = characterList.length\r\n\r\n        for (let i = 0; i < passwordLength; i++) {\r\n            const characterIndex = Math.round(Math.random() * characterListLength)\r\n            password = password + characterList.charAt(characterIndex)\r\n        }\r\n        return password\r\n    }\r\n\r\n    const handleCopyPassword = (e) => {\r\n        if (password === '') {\r\n            notify('Nothing To Copy!', true)\r\n        } else {\r\n            copyToClipboard()\r\n            notify(COPY_SUCCESS)\r\n        }\r\n    }\r\n\r\n    const copyToClipboard = () => {\r\n        const newTextArea = document.createElement('textarea')\r\n        newTextArea.innerText = password\r\n        document.body.appendChild(newTextArea)\r\n        newTextArea.select()\r\n        document.execCommand('copy')\r\n        newTextArea.remove()\r\n    }\r\n\r\n    const notify = (message, hasError = false) => {\r\n        if (hasError) {\r\n            toast.error(message, {\r\n                position: \"bottom-left\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: true,\r\n                progress: undefined,\r\n            })\r\n        } else {\r\n            toast.success(message, {\r\n                position: \"bottom-left\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: true,\r\n                progress: undefined,\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"password\">\r\n            <h4>Password Generator</h4>\r\n            <div className=\"container\">\r\n                <div className=\"generator\">\r\n                    <div className=\"generate-pass\">\r\n                        <h3>{password}</h3>\r\n                        <button onClick={handleCopyPassword} className=\"cpy-btn\">\r\n                            <FaClipboard />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password-length\">Password length</label>\r\n                        <input defaultValue={passwordLength} onChange={(e) => setPasswordLength(e.target.value)} type=\"number\" id=\"password-length\" name=\"password-length\" max=\"20\" min=\"5\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"uppercase-letters\">Include Upper case Letters</label>\r\n                        <input type=\"checkbox\" checked={includeUppercase} onChange={(e) => setIncludeUppercase(e.target.checked)} id=\"uppercase-letters\" name=\"uppercase-letters\" max=\"20\" min=\"5\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"lowercase-letters\">Include Lower case Letters</label>\r\n                        <input type=\"checkbox\" checked={includeLowercase} onChange={(e) => setIncludeLowercase(e.target.checked)} id=\"lowercase-letters\" name=\"lowercase-letters\" max=\"20\" min=\"5\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"include-numbers\">Include numbers</label>\r\n                        <input type=\"checkbox\" checked={includeNumbers} onChange={(e) => setIncludeNumbers(e.target.checked)} id=\"include-numbers\" name=\"include-numbers\" max=\"20\" min=\"5\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"include-symbols\">Include symbols</label>\r\n                        <input type=\"checkbox\" checked={includeSymbols} onChange={(e) => setIncludeSymbols(e.target.checked)} id=\"include-symbols\" name=\"include-symbols\" max=\"20\" min=\"5\" />\r\n                    </div>\r\n                    <div className=\"submit-button\">\r\n                        <button onClick={handleGeneratePassword}>\r\n                            Generate Password\r\n                        </button>\r\n                    </div>\r\n                    <ToastContainer\r\n                        position=\"bottom-left\"\r\n                        autoClose={5000}\r\n                        hideProgressBar={false}\r\n                        newestOnTop={false}\r\n                        closeOnClick\r\n                        rtl={false}\r\n                        pauseOnFocusLoss\r\n                        draggable\r\n                        pauseOnHover={false}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasswordGen;\r\n","export const COPY_SUCCESS = 'Password copied to clipboard'","export const numbers = '0123456789'\r\nexport const upperCaseLetters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\r\nexport const lowerCaseLetters = 'abcdefghijklmnopqrstuvwxyz'\r\nexport const specialCharacters = \"!'^+%&/()=?_#$½§{[]}|;:>÷`<.*-@é\"","import React, { useState, useRef } from 'react';\r\nimport './QRCode.css';\r\nimport Qrcode from 'qrcode';\r\nimport QrReader from 'react-qr-reader';\r\n\r\nconst QRCode = () => {\r\n\r\n    const [Text, setText] = useState('');\r\n    const [ImageURL, setImageURL] = useState('');\r\n    const [ScanResultFile, setScanResultFile] = useState('');\r\n    const [ScanResultWebCam, setScanResultWebCam] = useState('');\r\n\r\n    const qrRef = useRef(null);\r\n\r\n    const generateQRCode = async () => {\r\n        try {\r\n            const response = await Qrcode.toDataURL(Text);\r\n            setImageURL(response);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const onScanFile = () => {\r\n        qrRef.current.openImageDialog();\r\n    }\r\n\r\n    const handleErrorFile = (error) => {\r\n        console.log(error);\r\n    }\r\n\r\n    const handleScanFile = (result) => {\r\n        if(result)\r\n        {\r\n            setScanResultFile(result);\r\n        }\r\n    }\r\n\r\n    const handleErrorWebCam = (error) => {\r\n        console.log(error);\r\n    }\r\n\r\n    const handleScanWebCam = (result) => {\r\n        setScanResultWebCam(result);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"contain\">\r\n                <div className=\"card\">\r\n                    <h4>Generate and Download QR Code</h4>\r\n                    <div className=\"card-content\">\r\n                        <div className=\"box1\">\r\n                            <input onChange={(e) => setText(e.target.value)} classname=\"link-input\" placeholder=\"Enter link here\" />\r\n                            <button onClick={() => generateQRCode()}>Generate</button>\r\n                            <br /><br /><br />\r\n                            {ImageURL ? (<a href={ImageURL} download> <img src={ImageURL} alt=\"img\" /> </a>) : null}\r\n                        </div>\r\n                        <div className=\"box2\">\r\n                            <button variant=\"contained\" onClick={onScanFile}>Scan QR Code</button>\r\n                            <QrReader\r\n                                ref={qrRef}\r\n                                delay={300}\r\n                                style={{ width: \"40%\" }}\r\n                                onError={handleErrorFile}\r\n                                onScan={handleScanFile}\r\n                                legacyMode\r\n                            />\r\n                            <h3>Scanned Code: { ScanResultFile }</h3>\r\n                        </div>\r\n                        <div className=\"box3\">\r\n                            <h3>Scan QR Code by WebCam</h3>\r\n                            <QrReader\r\n                                delay={300}\r\n                                style={{ width: \"40%\" }}\r\n                                onError={handleErrorWebCam}\r\n                                onScan={handleScanWebCam}\r\n                            />\r\n                            <h3>Scanned by Web Cam code: {ScanResultWebCam}</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QRCode;\r\n\r\n\r\n// 14:03","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://api.shrtco.de/v2/',\r\n});\r\n\r\n","// import { response } from 'express';\r\nimport React, { useState } from 'react';\r\nimport shrtcode from './api/shrtcode';\r\n\r\n// eslint-disable-next-line\r\nconst HTTP_URL_VALIDATOR_REGEX = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g;\r\n\r\nconst Search = () => {\r\n\r\n    const [Link, setLink] = useState('');\r\n    const [Short, setShort] = useState('');\r\n    const [Loading, setLoading] = useState(false);\r\n\r\n    const validateURL = (string) => {\r\n        return string.match(HTTP_URL_VALIDATOR_REGEX)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (validateURL(Link)) {\r\n            getLink();\r\n            setLink('');\r\n            setLoading(!Loading);\r\n        }\r\n        else\r\n        setShort('Please input a valid URL!');\r\n    };\r\n\r\n    const getLink = async () => {\r\n        await shrtcode\r\n            .get(`shorten?url=${Link}`)\r\n            .then((response) => {\r\n                setShort(response.data.result.short_link);\r\n                setLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <input onChange={(e) => setLink(e.target.value)} placeholder=\"Enter the URL\" label=\"Input you link\" variant=\"outlined\" value={Link}></input>\r\n            {!Loading && (\r\n                <button onClick={(e) => handleSubmit(e)} variant=\"contained\">Submit</button>\r\n            )}\r\n\r\n            {Loading && (\r\n                <div class=\"spinner-border text-light\" role=\"status\">\r\n                    <span class=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n            )}\r\n            {Short && (\r\n                <div>\r\n                    <span>The Short Link: {Short}</span>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport Search from \"./Search\";\r\nimport './url.css';\r\n\r\nconst Url = () => {\r\n    return (\r\n        <div className=\"url\">\r\n            <h4>URL Shortener</h4>\r\n            <Search />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Url;\r\n","import React from 'react';\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport './footer.css';\r\n\r\nconst Footer = () => {\r\n\r\n    const toggleUp = () => {\r\n        scroll.scrollToTop();\r\n    }\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            © 2020-2021 BrowserUtilities.com\r\n            <p onClick={toggleUp}>Back to top</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\nimport './App.css'\nimport Navbar from './components/navbar/Navbar'\nimport PasswordGen from './password generator/PasswordGen';\nimport QRCode from './QR Code/QRCode';\nimport Url from './URL/Url';\n// import Speed from './Speed/Speed';\nimport Footer from './components/footer/Footer';\n\nfunction App() {\n  return (\n    <>\n      <Navbar />\n      <div className=\"App\">\n        <PasswordGen />\n        <QRCode />\n        <Url />\n        {/* <Speed /> */}\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}